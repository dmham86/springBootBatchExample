<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/batch
                           http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">
    <context:component-scan base-package="com.maximmold.batch.jobs"/>

    <!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <bean id="jobLauncher"
          class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
        <property name="taskExecutor">
            <bean class="org.springframework.core.task.SimpleAsyncTaskExecutor" />
        </property>
    </bean>-->

    <bean id="asyncTaskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor" />

    <!--<batch:job id="createPersonRecordJob" >-->
        <!--<batch:step id="personReaderStep" next="persistPersonStep">-->
            <!--<batch:tasklet ref="personRecordReaderTasklet"/>-->
            <!--<batch:listeners>-->
                <!--<batch:listener ref="personRecordPromotionListener"/>-->
            <!--</batch:listeners>-->
        <!--</batch:step>-->
        <!--<batch:step id="persistPersonStep" next="createPersonRecordStep">-->
            <!--<batch:tasklet ref="persistPersonTasklet"/>-->
        <!--</batch:step>-->
        <!--<batch:step id="createPersonRecordStep" next="postRecordCreatedSplit">-->
            <!--<batch:tasklet ref="createPersonRecordTasklet"/>-->
        <!--</batch:step>-->
        <!--<batch:split id="postRecordCreatedSplit" task-executor="asyncTaskExecutor">-->
            <!--<batch:flow>-->
                <!--<batch:step id="updateSuspenseStep">-->
                    <!--<batch:tasklet ref="updateSuspenseTasklet"/>-->
                <!--</batch:step>-->
            <!--</batch:flow>-->
            <!--<batch:flow>-->
                <!--<batch:step id="addPersonFlashStep">-->
                    <!--<batch:tasklet ref="addPersonFlashTasklet"/>-->
                <!--</batch:step>-->
            <!--</batch:flow>-->
        <!--</batch:split>-->
        <!--<batch:listeners>-->
            <!--<batch:listener ref="personRecordPromotionListener"/>-->
        <!--</batch:listeners>-->
    <!--</batch:job>-->

    <!-- Promotes the step context properties to the job context properties -->
    <bean id="personRecordPromotionListener" class="org.springframework.batch.core.listener.ExecutionContextPromotionListener">
        <property name="keys" value="person,personRecord,personRecordId"/>
    </bean>



</beans>